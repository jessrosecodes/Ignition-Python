# By: Jessica Ambrose
# Project Goal: FULLY Editable Trend Screens
# Project Description: the end user requested fully user edit-able trend screens
# this is not currently possible, and will be implimented in future updates
# Creating this script sets up the road map for that ^ to be done in the future, in addition to:
# decreasing the amount of time it takes to add date and infomration to the EZ Tables
# Currently, adding information to EZ tables is limited to pop up and tables within ignition
###############################################################################################################
# Script Branch: Easily make changes to the EZ charts and other additional memory tag datatables
# Script Task: Import CSV Data to EZ Chart and Table
# Script Purpose: Easily Organize Data from CSV, View in Power Table, 
# Make FAST changes to EZ Charts, End User Communication Purposes
###############################################################################################################
# 1) imports CSV data in to ignition 
#	1.a from a chosen path
# 	1.b using CSV reader
#	1.c Stores first line as the header (next function)
# 2) Creates a . . .
#	2.a) DataSet for CSV data to be stored
#	2.b) Path to store DataSet to Memory tag (DataSet)
#	Note: Memory Tag must ALREADY be created! 
# 3) Stores CSV data into . . .
# 	3.a Power Table 
#	3.b DataSet (Memory Tag)
########################################################################################################## Imports
import csv
########################################################################################################## Equations
########################################################################################################## Main
# 1.a
# Ask the user to find the CSV in the local file system.
# We're using Python's built-in open() function to open the file.
path = system.file.openFile("csv")
# 1.b
# Create a reader object that will iterate over the lines of a CSV.
csvData = csv.reader(open(path))
# 1.c
# Create a List of strings to use as a header for the dataset. Note that the number
# of headers must match the number of columns in the CSV, otherwise an error will occur.
# The simplest approach would be to use next() to read the first line in the file, and
# store that at the header.
header = csvData.next()
# 2.a
# Create a dataset with the header and the rest of our CSV.
dataset = system.dataset.toDataSet(header ,list(csvData))
# 2.b
# Choose the path in which the CSV data will be stored
path = ["[default]SPG/Trends/0_Tags_Test/All_NonVFD/CalculatedPens 1"]
# 3.a
# Store it into the table (dataset -> power table)
event.source.parent.getComponent('Power Table').data = dataset
# 3.b
# Store it into the memory tag (path)
system.tag.writeBlocking(path, dataset)
########################################################################################################## Main End